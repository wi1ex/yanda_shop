#!/usr/bin/env bash
set -euo pipefail

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
cd /root/app/yanda_shop
git fetch --all
git reset --hard origin/main

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–∂–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ —á–∏—Å—Ç–∏–º –Ω–µ–Ω—É–∂–Ω–æ–µ
docker-compose down
docker image prune -f
# docker-compose down --rmi all --volumes --remove-orphans
# docker system prune --all --volumes --force

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
certbot renew --noninteractive --standalone --agree-tos

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
docker-compose build --no-cache

# –ü–æ–¥–Ω–∏–º–∞–µ–º –ë–î, Redis –∏ MinIO
docker-compose up -d db redis minio

# –ñ–¥—ë–º, –ø–æ–∫–∞ Postgres –Ω–∞—á–Ω—ë—Ç –æ—Ç–≤–µ—á–∞—Ç—å
echo "‚è≥ –ñ–¥—ë–º Postgres‚Ä¶"
until docker-compose exec -T db pg_isready -U "${DB_USER}" >/dev/null 2>&1; do
  sleep 1
done
echo "‚úÖ Postgres –≥–æ—Ç–æ–≤"

# –ñ–¥—ë–º, –ø–æ–∫–∞ Redis –≤—ã–π–¥–µ—Ç –Ω–∞ —Å–≤—è–∑—å
echo "‚è≥ –ñ–¥—ë–º Redis‚Ä¶"
until docker-compose exec -T redis redis-cli -a "${REDIS_PASSWORD}" ping | grep -q PONG; do
  sleep 1
done
echo "‚úÖ Redis –≥–æ—Ç–æ–≤"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ —Å–≤–µ–∂–µ—Å–æ–±—Ä–∞–Ω–Ω–æ–º –æ–±—Ä–∞–∑–µ
echo "üöÄ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏"
docker-compose run --rm backend flask db upgrade

# –¢–µ–ø–µ—Ä—å –ø–æ–¥–Ω–∏–º–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
docker-compose up -d backend bot frontend proxy

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ª–æ–≥–∏
docker-compose ps
docker-compose logs -f
