events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # Принудительный редирект с HTTP на HTTPS
  server {
    listen 80;
    server_name shop.yanda.twc1.net;
    return 301 https://$host$request_uri;
  }

  # Основной HTTPS-сервер
  server {
    listen 443 ssl;
    server_name shop.yanda.twc1.net;

    ssl_certificate     /etc/letsencrypt/live/shop.yanda.twc1.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/shop.yanda.twc1.net/privkey.pem;

    # 1) ВСЕ запросы, которые не начинаются с /api/ и не /images/:
    location / {
      proxy_pass         http://frontend:80;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

      # Перехватываем 404-ответы от фронтенда
      proxy_intercept_errors on;
      # Если фронтенд вернул 404, вместо него отдать /index.html
      error_page 404 =200 /index.html;
    }

    # 2) Когда нужно отдавать именно index.html (клиентский SPA-фоллбек)
    location = /index.html {
      proxy_pass         http://frontend:80/index.html;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # 3) Проксирование всех /api/ запросов на бэкенд
    location /api/ {
      proxy_pass         http://backend:8000;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # 4) Проксирование /images/ на MinIO (или S3-эквивалент)
    location /images/ {
      proxy_pass         http://minio:9000/product-images/;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }
  }
}
