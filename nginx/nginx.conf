worker_processes auto;

events {
    worker_connections 1024;
}

http {
    sendfile             on;
    tcp_nopush           on;
    keepalive_timeout    65;
    include              mime.types;
    default_type         application/octet-stream;

    access_log off;
    error_log /var/log/nginx/error.log error;

    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=30r/s;

    map $http_upgrade $connection_upgrade {
        default   Upgrade;
        ""        close;
    }

    # Перенаправление HTTP → HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name yandashop.ru;
        return 301 https://$host$request_uri;
    }

    # HTTPS-конфигурация с поддержкой HTTP/2
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name yandashop.ru;
        client_max_body_size 100M;

        # TLS
        ssl_certificate           /etc/letsencrypt/live/yandashop.ru/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/yandashop.ru/privkey.pem;
        ssl_trusted_certificate   /etc/letsencrypt/live/yandashop.ru/chain.pem;
        ssl_session_cache         shared:SSL:10m;
        ssl_session_timeout       1h;
        ssl_stapling              off;
        ssl_stapling_verify       off;
        resolver                  1.1.1.1 8.8.8.8 valid=300s;
        resolver_timeout          5s;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src * data: blob:; script-src * 'unsafe-inline' 'unsafe-eval' data: blob:; style-src * 'unsafe-inline' data: blob:; img-src * data: blob:; font-src * data:; connect-src * ws: wss: data: blob:; media-src * data: blob:; frame-src *;" always;

        # Прокси для API
        location /api/ {
            limit_req zone=req_limit_per_ip burst=100 nodelay;
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header Connection         "";
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # Блокируем доступ к /webmail/data
        location ^~ /webmail/data/ {
            return 404;
        }

        # Webmail
        location ^~ /webmail/ {
            proxy_pass http://webmail:80/;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # Защита от доступа к системным файлам/секретам
        location ~* \.(env|git|svn|log|sh|bash|htpasswd)$ {
            deny all;
            return 404;
        }

        # Загрузки
        location /download/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # MinIO
        location /images/ {
            proxy_pass http://minio:9000/images/;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # Frontend SPA (Vue history mode)
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header Connection         "";
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }
    }
}
