apt update && apt upgrade -y
apt install -y ca-certificates curl gnupg lsb-release ufw

ufw allow OpenSSH
ufw allow 80,443/tcp
ufw --force enable

apt install -y docker.io docker-compose
systemctl enable docker

mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc > /dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
systemctl enable docker.socket
systemctl start docker.socket
systemctl restart docker
docker login --username wilex A114umdlilusm.

mkdir -p ~/app && cd ~/app
rm -rf yanda_shop
git clone https://TOKEN@github.com/wi1ex/yanda_shop.git
cd yanda_shop

export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

sudo apt install certbot -y
sudo certbot certonly --standalone -d yanda.twc1.net
sudo certbot renew --force-renewal

chmod +x deploy.sh
./deploy.sh

npm install локально для обновления package-lock.json
запись домена в .env, store.js, nginx.conf и BotFather
git clone https://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@github.com/wi1ex/yanda_shop.git
telegram bot token=7207149343:AAFdbkzwWDY8z_n8-a0rtYr9R2bQqt3-y8U

# первичная настройка миграции
docker-compose up -d db backend
docker-compose exec backend flask db init
docker-compose exec backend flask db migrate -m "initial schema"
docker-compose exec backend flask db upgrade
docker-compose up -d

# последующее изменение миграции
изменение models.py локально
скопировать models.py на сервер
docker-compose exec backend flask db migrate -m "описание изменений"
скопировать миграции на локальную машину
обновить гит локально
запустить deploy.sh на сервере

# если mc ещё не установлена, на сервере:
wget https://dl.min.io/client/mc/release/linux-amd64/mc
chmod +x mc
# затем прописать алиас к вашему MinIO
./mc alias set myminio http://127.0.0.1:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
# и сделать бакет public-read
./mc policy set download myminio/product-images
# Проверим, что подключение работает и бакет виден
./mc ls myminio
# Установить anonymous-политику для бакета
./mc anonymous set download myminio/product-images
# Проверить, что политика применена
./mc anonymous info myminio/product-images
# Убедитесь, что теперь показывает ваши файлы
./mc ls myminio/product-images
# Удалить конкретный файл
./mc rm myminio/product-images/bot.png

# Включить vm.overcommit_memory для Redis
# Создадим конфиг для sysctl
echo "vm.overcommit_memory = 1" | sudo tee /etc/sysctl.d/99-redis-overcommit.conf
# Применим сразу, без перезагрузки
sudo sysctl --system