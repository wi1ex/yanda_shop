apt update && apt upgrade -y
apt install -y docker.io docker-compose
systemctl enable docker

mkdir -p ~/app && cd ~/app
rm -rf telegram_test
git clone https://TOKEN@github.com/wi1ex/telegram_test.git
cd telegram_test

ufw allow 22/tcp
ufw allow 80/tcp
ufw allow 443/tcp
ufw allow 8000/tcp
ufw allow 8080/tcp
ufw enable

apt update
apt install -y ca-certificates curl gnupg
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc > /dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
systemctl enable docker.socket
systemctl start docker.socket
systemctl restart docker
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1
docker-compose build --no-cache
docker-compose up -d
docker-compose logs -f

sudo apt install certbot -y
sudo certbot certonly --standalone -d tgtest.twc1.net
sudo certbot renew --force-renewal

curl -I https://tgtest.twc1.net
curl https://tgtest.twc1.net/api/

# установка в BotFather
/setdomain → tgtest.twc1.net
# обращение в App.vue
fetch("https://tgtest.twc1.net/api/save_user", ...)

chmod +x deploy.sh
./deploy.sh

telegram_test содержит docker-compose.yml, deploy.sh, .env, setup_info.ini, /backend, /bot, /frontend, /nginx
backend/ содержит app.py, routes.py, Dockerfile и requirements.txt.
bot/ содержит bot.py, config.py, Dockerfile и requirements.txt.
frontend/ содержит Dockerfile, package.json, vite.config.js, src/index.html, src/App.vue, src/main.js, прочие компоненты в assets/components и изображения в assets/images/
nginx/ содержит nginx.conf
