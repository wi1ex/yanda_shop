apt update && apt upgrade -y
apt install -y docker.io docker-compose
systemctl enable docker

mkdir -p ~/app && cd ~/app
rm -rf yanda_shop
git clone https://TOKEN@github.com/wi1ex/yanda_shop.git
cd yanda_shop

apt update
apt install -y ca-certificates curl gnupg
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc > /dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
systemctl enable docker.socket
systemctl start docker.socket
systemctl restart docker
docker login --username wilex A114umdlilusm.
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

sudo apt install certbot -y
sudo certbot certonly --standalone -d yanda.twc1.net
sudo certbot renew --force-renewal

ufw allow 22/tcp
ufw allow 80/tcp
ufw allow 443/tcp
ufw allow 5432/tcp
ufw allow 6379/tcp
ufw allow 8000/tcp
ufw allow 8080/tcp
ufw enable

docker-compose build --no-cache
docker-compose up -d
docker-compose logs -f

chmod +x deploy.sh
./deploy.sh

# npm install локально для обновления package-lock.json
# запись домена в nginx.conf, App.vue (fetch) и BotFather

# первичная настройка миграции
docker-compose build backend
docker-compose up -d backend
docker-compose exec backend flask db init
docker-compose exec backend flask db migrate -m "initial schema"
docker-compose exec backend flask db upgrade
docker-compose exec backend flask db stamp head
docker-compose down

# последующее изменение миграции
изменение models.py
обновит гит
cd /root/app/yanda_shop
git fetch --all
git reset --hard origin/main
flask db migrate -m "описание изменений"
скачать новый файл миграции
обновит гит
